<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="1.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="11304"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="AP1" custom_title="0" dock_id="2" table="4,3:mainAP1"/><dock_state state="000000ff00000000fd0000000100000002000004c000000387fc0100000002fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000004c00000013800ffffff000004c00000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="AP1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="223"/><column index="2" value="39"/><column index="3" value="103"/><column index="4" value="39"/><column index="5" value="39"/><column index="6" value="39"/><column index="7" value="39"/><column index="8" value="39"/><column index="9" value="39"/><column index="10" value="46"/><column index="11" value="46"/><column index="12" value="46"/><column index="13" value="46"/><column index="14" value="46"/><column index="15" value="46"/><column index="16" value="46"/><column index="17" value="46"/><column index="18" value="46"/><column index="19" value="46"/><column index="20" value="46"/><column index="21" value="46"/><column index="22" value="46"/><column index="23" value="46"/><column index="24" value="46"/><column index="25" value="46"/><column index="26" value="46"/><column index="27" value="46"/><column index="28" value="46"/><column index="29" value="46"/><column index="30" value="46"/><column index="31" value="46"/><column index="32" value="46"/><column index="33" value="46"/><column index="34" value="46"/><column index="35" value="46"/><column index="36" value="46"/><column index="37" value="46"/><column index="38" value="46"/><column index="39" value="46"/><column index="40" value="46"/><column index="41" value="46"/><column index="42" value="46"/><column index="43" value="46"/><column index="44" value="46"/><column index="45" value="46"/><column index="46" value="46"/><column index="47" value="46"/><column index="48" value="46"/><column index="49" value="46"/><column index="50" value="46"/><column index="51" value="46"/><column index="52" value="46"/><column index="53" value="46"/><column index="54" value="46"/><column index="55" value="46"/><column index="56" value="46"/><column index="57" value="46"/><column index="58" value="46"/><column index="59" value="46"/><column index="60" value="46"/><column index="61" value="46"/><column index="62" value="46"/><column index="63" value="46"/><column index="64" value="46"/><column index="65" value="46"/><column index="66" value="46"/><column index="67" value="46"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="MetroS">--CREATE VIEW MetroS AS
SELECT country AS Country, lines, stations, annual_ridership_mill, inauguration AS Year
FROM Metro
WHERE inauguration &lt;= 2016 
ORDER BY Country</sql><sql name="PopulationS">--CREATE VIEW PopulationS AS
SELECT Area AS Country, Year, Value * 1000 AS Population
FROM Population
WHERE Element = 'Total Population - Both sexes'
AND Year BETWEEN 1996 AND 2016
ORDER BY Country, Year</sql><sql name="PopulationSP">--CREATE VIEW PopulationSP AS
SELECT p.Country, p.Year, p.Population, c.percent_of_population_eating_chocolate, ROUND((p.Population * c.percent_of_population_eating_chocolate / 100),0) AS Population_eating_chocolate
FROM PopulationS p
JOIN Percent c ON p.Country = c.Country
ORDER BY p.Country, p.Year</sql><sql name="GDPS">--CREATE VIEW GDPS AS
WITH corrected_Areas AS (
    SELECT CAST(CASE Area
                WHEN 'China, mainland' THEN 'China'
                WHEN 'United States of America' THEN 'USA'
                ELSE Area
            END AS TEXT
        ) AS Country,
        Year,
        ROUND(Value, 2) AS GDP
    FROM GDP
    WHERE Year BETWEEN 1996 AND 2016
    AND Element = 'Value US$ per capita'
	AND Item = 'Gross Domestic Product'
)
SELECT * FROM corrected_Areas
ORDER BY Year, Country</sql><sql name="GDPSA">--CREATE VIEW GDPSA AS
SELECT g.Country, g.Year, g.GDP, a.Inflation
FROM GDPS g
LEFT JOIN AP1 a ON g.Country = a.Country AND g.Year = a.Year
ORDER BY g.Country, g.Year;</sql><sql name="CommodityS">CREATE VIEW CommodityS AS
WITH corrected_countries AS (
    SELECT 
        CAST(CASE country_or_area
            WHEN 'Bosnia Herzegovina' THEN 'Bosnia and Herzegovina'
            WHEN 'Central African Rep.' THEN 'Central African Republic'
            WHEN 'Cook Isds' THEN 'Cook Islands'
            WHEN 'Czech Rep.' THEN 'Czechia'
            WHEN 'Dominican Rep.' THEN 'Dominican Republic'
            WHEN 'EU-28' THEN 'European Union (27)'
            WHEN 'Fmr Fed. Rep. of Germany' THEN 'Germany'
            WHEN 'FS Micronesia' THEN 'Micronesia'
            WHEN 'Faeroe Isds' THEN 'Faroe Islands'
            WHEN 'Iran' THEN 'Iran (Islamic Republic of)'
            WHEN &quot;Lao People's Dem. Rep.&quot; THEN &quot;Lao People's Democratic Republic&quot;
            WHEN 'Neth. Antilles' THEN 'Netherlands Antilles (former)'
            WHEN 'Netherlands' THEN 'Netherlands (Kingdom of the)'
            WHEN 'Rep. of Korea' THEN 'Republic of Korea'
            WHEN 'Rep. of Moldova' THEN 'Republic of Moldova'
            WHEN 'Russia' THEN 'Russian Federation'
            WHEN 'Solomon Isds' THEN 'Solomon Islands'
            WHEN 'State of Palestine' THEN 'Palestine'
            WHEN 'Swaziland' THEN 'Eswatini'
            WHEN 'Syria' THEN 'Syrian Arab Republic'
            WHEN 'TFYR of Macedonia' THEN 'North Macedonia'
            WHEN 'Turkey' THEN 'TÃ¼rkiye'
            WHEN 'Turks and Caicos Isds' THEN 'Turks and Caicos Islands'
            WHEN 'United Kingdom' THEN 'United Kingdom of Great Britain and Northern Ireland'
            WHEN 'United Rep. of Tanzania' THEN 'United Republic of Tanzania'
            WHEN 'Venezuela' THEN 'Venezuela (Bolivarian Republic of)'
            WHEN 'Wallis and Futuna Isds' THEN 'Wallis and Futuna Islands'
            ELSE country_or_area
        END AS TEXT
        ) AS Country,
        year,
        commodity,
        flow,
        weight_kg
    FROM Commodity
    WHERE 
        year BETWEEN 1996 AND 2016
        AND commodity LIKE '%Chocolate, cocoa%'
        AND commodity NOT LIKE '%Machines%'
        AND flow IN ('Import', 'Re-Import')
		AND country_or_area != 'So. African Customs Union'
)
SELECT 
    Country,
    year as Year,
    CAST(SUM(weight_kg) AS REAL) AS Total_weight_kg
FROM corrected_countries
GROUP BY country, year
ORDER BY country, year</sql><sql name="CommoditySM">CREATE VIEW CommoditySM AS
SELECT 
    c.Country,
    c.Year,
    c.total_weight_kg,
    m.lines,
    m.stations,
    m.annual_ridership_mill,
    CASE 
        WHEN m.Country IS NOT NULL AND m.Year &lt;= c.Year THEN 'Yes'
        ELSE 'No'
    END AS 'availability_of_metro'
FROM 
    CommodityS c
LEFT JOIN 
    MetroS m ON c.Country = m.Country</sql><sql name="CommoditySMP">--CREATE VIEW CommoditySMP AS
SELECT 
    c.Country,
    c.Year,
    c.total_weight_kg,
    c.availability_of_metro,
    c.lines,
    c.stations,
    c.annual_ridership_mill,
    p.Population_eating_chocolate
FROM 
    CommoditySM c
LEFT JOIN 
    PopulationSP p ON c.Country = p.Country AND c.Year = p.Year
ORDER BY 
    c.Year, 
    c.Country</sql><sql name="CommoditySMPG">--CREATE VIEW CommoditySMPG AS
SELECT 
    c.Country,
    c.Year,
    c.total_weight_kg,
    c.availability_of_metro,
    c.lines,
    c.stations,
    c.annual_ridership_mill,
    c.Population_eating_chocolate,
    g.GDP AS GDP_USD,
	g.Inflation,
	
    CASE WHEN c.Population_eating_chocolate &gt; 0 THEN ROUND(c.total_weight_kg / c.Population_eating_chocolate, 2) ELSE NULL
    END AS kg_per_person,
	
    CASE WHEN g.GDP &gt; 0 THEN ROUND(c.total_weight_kg / g.GDP, 2) ELSE NULL
    END AS kg_per_GDP
	
FROM 
    CommoditySMP c
LEFT JOIN 
    GDPSA g ON c.Country = g.Country AND c.Year = g.Year
ORDER BY 
    c.Country,
	c.Year</sql><current_tab id="8"/></tab_sql></sqlb_project>
